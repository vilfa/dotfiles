# Default config for sway
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show=drun | xargs swaymsg exec --
# Monitor configuration
set $output-extern-1 DP-1
set $output-extern-2 DP-2
set $output-laptop eDP-1

### Output configuration
#
# Wallpaper configuration
    output * bg ~/.wallpapers/john-towner-JgOeRuGD_Y4-unsplash.jpg fill 
# You can get the names of your outputs by running: swaymsg -t get_outputs
    output $output-extern-1 mode 2560x1440@144Hz position 1920,0
    output $output-extern-2 mode 2560x1440@144Hz position 1920,0
    output $output-laptop mode 1920x1080@60Hz position 0,0

### Idle configuration
#
# Screen lock configuration
    exec swayidle -w \
            timeout 300 'swaylock' \
            timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
            before-sleep 'swaylock'

### Input configuration
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

    input 1739:52744:SYNA30BD:00_06CB:CE08 {
        natural_scroll enabled
        middle_emulation enabled
        drag_lock enabled
        tap enabled
        dwt enabled
    }

    input 1:1:AT_Translated_Set_2_keyboard {
        xkb_layout us,si(us)
        xkb_options grp:ctrls_toggle
    }

    input 1452:591:Keychron_K8_Keychron_K8 {
        xkb_layout us,si(us)
        xkb_options grp:ctrls_toggle
    }

### Interface configuration
#
# Schema variable
set $gnome-schema org.gnome.desktop.interface
set $gnome-wm-pref org.gnome.desktop.wm.preferences
# Set interface settings
    exec_always {
        gsettings set $gnome-schema gtk-theme 'AdwMod-compact-dark'
        gsettings set $gnome-schema icon-theme 'Qogir-dark'
        gsettings set $gnome-schema cursor-theme 'Adwaita'
        gsettings set $gnome-schema font-name 'Sans 10'
        gsettings set $gnome-schema application-prefer-dark-theme 'true'
        gsettings set $gnome-wm-pref button-layout :
    }
# Gaps configuration
    gaps inner 5
# Window titlebars
    default_border pixel 3
# Font & Window colors
    font pango:monospace 10
    # set $accent #cc0000
    # set $accent #15539e
    set $accent #1b70d8
    # class                 border  backgr. text    indica. child_border
    client.focused          $accent $accent #ffffff #CCCCCC $accent
    client.focused_inactive #000000 #000000 #888888 #000000 #000000
    client.unfocused        #000000 #000000 #ffffff #000000 #000000
    client.urgent           #ffffff #ffffff #000000 #ffffff #ffffff
    client.placeholder      #000000 #000000 #ffffff #000000 #000000
    client.background       #000000
# Nofitication configuration
    exec mako

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec wlogout
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Workspace to display mapping
    workspace 1 output $output-extern-1
    workspace 2 output $output-extern-1
    workspace 3 output $output-extern-1
    workspace 4 output $output-extern-1
    workspace 5 output $output-extern-1

    workspace 1 output $output-extern-2
    workspace 2 output $output-extern-2
    workspace 3 output $output-extern-2
    workspace 4 output $output-extern-2
    workspace 5 output $output-extern-2
    
    workspace 6 output $output-laptop
    workspace 7 output $output-laptop
    workspace 8 output $output-laptop
    workspace 9 output $output-laptop
    workspace 10 output $output-laptop
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Screenshots
#
    # Capture the focused screen to clipboard
    bindsym Print exec grim -o "$(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name')" - | wl-copy

    # Capture the focused window to clipboard
    # bindsym Shift+Alt+Print exec grim -o "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy

    # Capture the specified screen area to clipboard
    bindsym Shift+Print exec grim -g "$(slurp)" - | wl-copy

    # Capture all screens to clipboard
    bindsym Control+Shift+Alt+Print exec grim - | wl-copy
#
# Media keys
#
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym XF86MonBrightnessUp exec brightnessctl set +5%
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    swaybar_command waybar
}

include /etc/sway/config.d/*
include config.d/*
