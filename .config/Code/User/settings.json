{
    "telemetry.telemetryLevel": "off",
    "workbench.enableExperiments": false,
    "workbench.tree.renderIndentGuides": "always",
    "workbench.editorAssociations": {
        "*.pdf": "latex-workshop-pdf-hook"
    },
    "editor.fontSize": 12,
    "editor.fontFamily": "monospace",
    "editor.fontWeight": "400",
    "editor.renderWhitespace": "all",
    "editor.suggestSelection": "first",
    "editor.formatOnSave": true,
    "editor.cursorBlinking": "solid",
    "editor.cursorStyle": "block",
    "editor.largeFileOptimizations": true,
    "editor.rulers": [
        80
    ],
    "debug.allowBreakpointsEverywhere": true,
    "debug.console.fontSize": 12,
    "markdown.preview.fontSize": 12,
    "terminal.integrated.fontSize": 12,
    "terminal.integrated.scrollback": 1000000,
    "terminal.integrated.defaultProfile.linux": "zsh",
    "breadcrumbs.icons": false,
    "outline.icons": false,
    "scm.inputFontSize": 12,
    "scm.alwaysShowRepositories": true,
    "scm.alwaysShowActions": true,
    "cmake.configureOnOpen": false,
    "security.workspace.trust.untrustedFiles": "open",
    "explorer.confirmDragAndDrop": false,
    "files.insertFinalNewline": true,
    "files.associations": {
        "*.cl": "opencl",
        ".clang-format": "yaml"
    },
    "files.exclude": {
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true
    },
    "rust-client.rustupPath": "~/.cargo/bin/rustup",
    "doxdocgen.generic.authorTag": "@author {author} <{email}>",
    "doxdocgen.generic.useGitUserEmail": true,
    "doxdocgen.generic.useGitUserName": true,
    "doxdocgen.file.copyrightTag": [],
    "C_Cpp.formatting": "clangFormat",
    "C_Cpp.clang_format_sortIncludes": true,
    "C_Cpp.default.cppStandard": "c++20",
    "C_Cpp.default.cStandard": "c17",
    "C_Cpp.default.intelliSenseMode": "linux-clang-x64",
    "C_Cpp.intelliSenseEngine": "Disabled",
    "C_Cpp.clang_format_fallbackStyle": "Mozilla",
    "C_Cpp.debugShortcut": true,
    "diffEditor.codeLens": true,
    "OpenCL.formatting.name": "clang-format",
    "extensions.ignoreRecommendations": true,
    "java.format.settings.profile": "GoogleStyle",
    "gitlens.advanced.messages": {
        "suppressLineUncommittedWarning": true
    },
    "ltex.additionalRules.motherTongue": "sl-SI",
    "ltex.additionalRules.enablePickyRules": true,
    "ltex.additionalRules.languageModel": "/home/vilfa/.config/texstudio/dictionaries",
    "ltex.completionEnabled": true,
    "ltex.language": "sl-SI",
    "ltex.statusBarItem": true,
    "ltex.enabled": [
        // "bibtex",
        // "tex",
        // "latex",
    ],
    "latex-workshop.view.pdf.viewer": "tab",
    "latex-workshop.chktex.enabled": true,
    "latex-workshop.latex.pdfWatch.delay": 100,
    "latex-workshop.latexindent.args": [
        "-c",
        "%DIR%/",
        "%TMPFILE%",
        "-m"
    ],
    "[c]": {
        "editor.wordBasedSuggestions": false,
        "editor.suggest.insertMode": "replace",
        "editor.semanticHighlighting.enabled": true,
        "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
    },
    "[cpp]": {
        "editor.wordBasedSuggestions": false,
        "editor.suggest.insertMode": "replace",
        "editor.semanticHighlighting.enabled": true,
        "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
    },
    "[python]": {
        "editor.defaultFormatter": "ms-python.python",
    },
    "[tex]": {
        "editor.wordWrap": "on",
        "editor.formatOnPaste": false,
        "editor.formatOnSave": true,
        "editor.suggestSelection": "recentlyUsedByPrefix",
        "editor.defaultFormatter": "James-Yu.latex-workshop",
    },
    "[latex]": {
        "editor.wordWrap": "on",
        "editor.formatOnPaste": false,
        "editor.formatOnSave": true,
        "editor.suggestSelection": "recentlyUsedByPrefix",
        "editor.defaultFormatter": "James-Yu.latex-workshop",
    },
    "[java]": {
        "editor.defaultFormatter": "redhat.java"
    },
    "clangd.arguments": [
        "--enable-config",
        "--compile-commands-dir=builddir"
    ],
    "github.gitProtocol": "ssh",
}
